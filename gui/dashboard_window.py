# gui/dashboard_window.py

from PyQt5 import QtWidgets, QtCore, QtGui
from utils.theme_manager import toggle_theme, update_theme_ui, init_theme
from gui.product_manager import ProductManagerPage
from gui.supply_history import OperationPage
from gui.report_generator import ReportPage
from gui.supplier_manager import SupplierManagerPage
from gui.warehouse_manager import WarehouseManagerPage
from gui.role_manager import RoleManagerPage
import logging

logger = logging.getLogger(__name__)

class MainWindow(QtWidgets.QMainWindow):
    def __init__(self, user, make_login_dialog):
        super().__init__()
        self.user = user
        self.make_login_dialog = make_login_dialog

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, dark_teal –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
        init_theme('dark_teal')

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–∫–Ω–æ
        self.setWindowTitle(f"Inventory System ‚Äî {user.role}")
        self.resize(1024, 768)

        # --- –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å —Å–ª–µ–≤–∞ ---
        self.nav_list = QtWidgets.QListWidget()
        self.nav_list.setFixedWidth(180)
        self.nav_list.addItem("üì¶ –¢–æ–≤–∞—Ä—ã")
        self.nav_list.addItem("üîÑ –û–ø–µ—Ä–∞—Ü–∏–∏")
        self.nav_list.addItem("üìä –û—Ç—á—ë—Ç—ã")
        self.nav_list.addItem("üè¨ –°–∫–ª–∞–¥—ã")
        self.nav_list.addItem("üöö –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏")
        if user.role == "admin":
            self.nav_list.addItem("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
        self.nav_list.currentRowChanged.connect(self.on_nav_changed)

        # --- –°—Ç–µ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü —Å–ø—Ä–∞–≤–∞ ---
        self.product_page   = ProductManagerPage()
        self.operation_page = OperationPage()
        self.report_page    = ReportPage()
        self.warehouse_page = WarehouseManagerPage()
        self.supplier_page  = SupplierManagerPage()

        self.stack = QtWidgets.QStackedWidget()
        self.stack.addWidget(self.product_page)
        self.stack.addWidget(self.operation_page)
        self.stack.addWidget(self.report_page)
        self.stack.addWidget(self.warehouse_page)
        self.stack.addWidget(self.supplier_page)
        if user.role == "admin":
            self.user_page = RoleManagerPage()
            self.stack.addWidget(self.user_page)

        # –°–∏–≥–Ω–∞–ª—ã –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
        self.product_page.data_changed.connect(self.operation_page.reload)
        self.operation_page.reload_request.connect(self.product_page.reload)
        self.warehouse_page.data_changed.connect(self.operation_page.reload)

        # --- –í–µ—Ä—Ö–Ω–∏–π —Ç—É–ª–±–∞—Ä ---
        top_bar = QtWidgets.QWidget()
        hl = QtWidgets.QHBoxLayout(top_bar)
        # –ù–µ–±–æ–ª—å—à–∏–µ –æ—Ç—Å—Ç—É–ø—ã, —á—Ç–æ–±—ã –∫–æ–Ω—Ç–µ–Ω—Ç —á—É—Ç—å –æ—Ç–æ—à—ë–ª –æ—Ç –∫—Ä–∞—ë–≤
        hl.setContentsMargins(8, 8, 8, 4)
        hl.setSpacing(4)

        # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
        lbl_title = QtWidgets.QLabel("ERP-–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –£—á—ë—Ç –ø—Ä–æ–¥—É–∫—Ü–∏–∏")
        lbl_title.setAlignment(QtCore.Qt.AlignCenter)

        # –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω—ã –∞–∫–∫–∞—É–Ω—Ç–∞ (–∏–∫–æ–Ω–∫–∞ –≤—ã—Ö–æ–¥–∞)
        btn_switch = QtWidgets.QPushButton()
        btn_switch.setFixedSize(32, 32)
        btn_switch.setIconSize(QtCore.QSize(20, 20))
        btn_switch.clicked.connect(self.on_switch_account)

        # –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã (–∏–∫–æ–Ω–∫–∞ —Å–æ–ª–Ω—Ü–µ/–ª—É–Ω–∞)
        btn_theme = QtWidgets.QPushButton()
        btn_theme.setFixedSize(32, 32)
        btn_theme.setIconSize(QtCore.QSize(20, 20))
        btn_theme.clicked.connect(lambda: toggle_theme(btn_theme, lbl_title, btn_switch))

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏ –∏ —Å—Ç–∏–ª–∏ —Å—Ä–∞–∑—É
        update_theme_ui(btn_theme, lbl_title, btn_switch)

        # –°–æ–±–∏—Ä–∞–µ–º HBox: –æ—Ç—Å—Ç—É–ø, –∑–∞–≥–æ–ª–æ–≤–æ–∫, –æ—Ç—Å—Ç—É–ø, –ø—Ä–∞–≤–∞—è –≥—Ä—É–ø–ø–∞
        hl.addStretch()
        hl.addWidget(lbl_title, stretch=1)
        hl.addStretch()

        # –ü—Ä–∞–≤–∞—è –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –≥—Ä—É–ø–ø–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫
        right_vbox = QtWidgets.QVBoxLayout()
        # –ù–µ–±–æ–ª—å—à–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã
        right_vbox.setContentsMargins(0, 0, 0, 0)
        # –ù–µ–±–æ–ª—å—à–æ–π gap –º–µ–∂–¥—É –∫–Ω–æ–ø–∫–∞–º–∏
        right_vbox.setSpacing(4)
        # –ü—Ä–∏–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∫ –≤–µ—Ä—Ö–Ω–µ–º—É –∫—Ä–∞—é
        right_vbox.addWidget(btn_switch, alignment=QtCore.Qt.AlignRight | QtCore.Qt.AlignTop)
        right_vbox.addWidget(btn_theme,  alignment=QtCore.Qt.AlignRight | QtCore.Qt.AlignTop)
        right_vbox.addStretch()

        # –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º VBox –≤ –≤–∏–¥–∂–µ—Ç, —á—Ç–æ–±—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å—Ä–∞–±–æ—Ç–∞–ª–æ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ
        right_container = QtWidgets.QWidget()
        right_container.setLayout(right_vbox)
        hl.addWidget(right_container, 0, QtCore.Qt.AlignRight | QtCore.Qt.AlignTop)

        # --- –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å: toolbar + splitter —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ ---
        central = QtWidgets.QWidget()
        vbox = QtWidgets.QVBoxLayout(central)
        vbox.setContentsMargins(0, 0, 0, 0)
        vbox.setSpacing(0)
        vbox.addWidget(top_bar)

        splitter = QtWidgets.QSplitter(QtCore.Qt.Horizontal)
        splitter.addWidget(self.nav_list)
        splitter.addWidget(self.stack)
        splitter.setStretchFactor(1, 1)
        vbox.addWidget(splitter)

        self.setCentralWidget(central)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–≤—É—é –≤–∫–ª–∞–¥–∫—É
        self.nav_list.setCurrentRow(0)
        logger.info("MainWindow initialized for user '%s'", user.username)

    def on_nav_changed(self, index: int):
        """–ú–µ–Ω—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ —Å—Ç–µ–∫–µ—Ä–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤ —Å–ø–∏—Å–∫–µ."""
        self.stack.setCurrentIndex(index)

    def on_switch_account(self):
        """–î–∏–∞–ª–æ–≥ —Å–º–µ–Ω—ã –∞–∫–∫–∞—É–Ω—Ç–∞."""
        self.hide()
        dlg = self.make_login_dialog()
        if dlg.exec_() == QtWidgets.QDialog.Accepted:
            new_user = dlg.user
            logger.info("Switching account: now user '%s'", new_user.username)
            new_win = MainWindow(new_user, self.make_login_dialog)
            new_win.show()
        else:
            self.show()
